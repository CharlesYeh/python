#reader(lib"read.ss""wxme")WXME0108 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 5.3 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 29 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 93
(
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-sni"
 #"pclass-wxme.ss\" \"framework\"))\0"
) 0 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mr"
 #"lib\"))\0"
) 1 0 29 #"drscheme:bindings-snipclass%\0"
1 0 88
(
 #"((lib \"pict-snip.rkt\" \"drracket\" \"private\") (lib \"pict-snip.r"
 #"kt\" \"drracket\" \"private\"))\0"
) 0 0 33 #"(lib \"bullet-snip.ss\" \"browser\")\0"
0 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 1 6 #"wxloc\0"
          0 0 55 0 1 #"\0"
0 75 1 #"\0"
0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 10 #"Monospace\0"
0 8 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 38
#"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 28
#"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 37
#"drracket:check-syntax:unused-require\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"drracket:check-syntax:free-variable\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 34 139 34 0 0 0 -1 -1 2 37
#"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 34 139 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 176 48 96 0 0 0 -1 -1 2 38
#"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 176 48 96 0 0 0 -1 -1 4 1
#"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 100 0 0 0 0 -1
-1 0 1 #"\0"
0 75 10 #"Monospace\0"
0.0 8 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255 255
255 1 -1           0 884 0 26 3 10 #"#lang plai"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 7 #"require"
0 0 22 3 1 #" "
0 0 19 3 19 #"\"python-syntax.rkt\""
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 7 #"require"
0 0 22 3 1 #" "
0 0 14 3 12 #"racket/match"
0 0 22 29 1 #"\n"
0 0 22 3 9 #"         "
0 0 14 3 11 #"racket/list"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 17 3 2 #"#|"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 66
#"Python parses as a JSON structure that we export from Python's ast"
0 0 17 29 1 #"\n"
0 0 17 3 67
#"module.  You should use this file to turn it into a plai-typed data"
0 0 17 29 1 #"\n"
0 0 17 3 46 #"structure that you define in python-syntax.rkt"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 2 #"|#"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 22 3 2 #" ("
0 0 14 3 21 #"get-structured-python"
0 0 22 3 1 #" "
0 0 14 3 6 #"pyjson"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 3 #"  ("
0 0 15 3 5 #"match"
0 0 22 3 1 #" "
0 0 14 3 6 #"pyjson"
0 0 22 29 1 #"\n"
0 0 22 3 6 #"    [("
0 0 14 3 10 #"hash-table"
0 0 22 3 2 #" ("
0 0 20 3 1 #"'"
0 0 14 3 8 #"nodetype"
0 0 22 3 1 #" "
0 0 19 3 8 #"\"Module\""
0 0 22 3 3 #") ("
0 0 20 3 1 #"'"
0 0 14 3 4 #"body"
0 0 22 3 1 #" "
0 0 14 3 9 #"expr-list"
0 0 22 3 2 #"))"
0 0 22 29 1 #"\n"
0 0 22 3 6 #"     ("
0 0 14 3 5 #"PySeq"
0 0 22 3 2 #" ("
0 0 14 3 3 #"map"
0 0 22 3 1 #" "
0 0 14 3 21 #"get-structured-python"
0 0 22 3 1 #" "
0 0 14 3 9 #"expr-list"
0 0 22 3 3 #"))]"
0 0 22 29 1 #"\n"
0 0 22 3 6 #"    [("
0 0 14 3 10 #"hash-table"
0 0 22 3 2 #" ("
0 0 20 3 1 #"'"
0 0 14 3 8 #"nodetype"
0 0 22 3 1 #" "
0 0 19 3 6 #"\"Expr\""
0 0 22 3 3 #") ("
0 0 20 3 1 #"'"
0 0 14 3 5 #"value"
0 0 22 3 1 #" "
0 0 14 3 4 #"expr"
0 0 22 3 2 #"))"
0 0 22 29 1 #"\n"
0 0 22 3 6 #"     ("
0 0 14 3 21 #"get-structured-python"
0 0 22 3 1 #" "
0 0 14 3 4 #"expr"
0 0 22 3 2 #")]"
0 0 22 29 1 #"\n"
0 0 22 3 6 #"    [("
0 0 14 3 10 #"hash-table"
0 0 22 3 2 #" ("
0 0 20 3 1 #"'"
0 0 14 3 8 #"nodetype"
0 0 22 3 1 #" "
0 0 19 3 6 #"\"Call\""
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 18 #"                 ("
0 0 20 3 1 #"'"
0 0 14 3 8 #"keywords"
0 0 22 3 1 #" "
0 0 14 3 8 #"keywords"
0 0 22 3 2 #") "
0 0 17 3 28 #";; ignoring keywords for now"
0 0 22 29 1 #"\n"
0 0 22 3 18 #"                 ("
0 0 20 3 1 #"'"
0 0 14 3 6 #"kwargs"
0 0 22 3 1 #" "
0 0 14 3 6 #"kwargs"
0 0 22 3 6 #")     "
0 0 17 3 26 #";; ignoring kwargs for now"
0 0 22 29 1 #"\n"
0 0 22 3 18 #"                 ("
0 0 20 3 1 #"'"
0 0 14 3 8 #"starargs"
0 0 22 3 1 #" "
0 0 14 3 8 #"starargs"
0 0 22 3 2 #") "
0 0 17 3 28 #";; ignoring starargs for now"
0 0 22 29 1 #"\n"
0 0 22 3 18 #"                 ("
0 0 20 3 1 #"'"
0 0 14 3 4 #"args"
0 0 22 3 1 #" "
0 0 14 3 9 #"args-list"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 18 #"                 ("
0 0 20 3 1 #"'"
0 0 14 3 4 #"func"
0 0 22 3 1 #" "
0 0 14 3 9 #"func-expr"
0 0 22 3 2 #"))"
0 0 22 29 1 #"\n"
0 0 22 3 6 #"     ("
0 0 14 3 5 #"PyApp"
0 0 22 3 2 #" ("
0 0 14 3 21 #"get-structured-python"
0 0 22 3 1 #" "
0 0 14 3 9 #"func-expr"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 13 #"            ("
0 0 14 3 3 #"map"
0 0 22 3 1 #" "
0 0 14 3 21 #"get-structured-python"
0 0 22 3 1 #" "
0 0 14 3 9 #"args-list"
0 0 22 3 3 #"))]"
0 0 22 29 1 #"\n"
0 0 22 3 4 #"    "
0 0 22 29 1 #"\n"
0 0 22 3 6 #"    [("
0 0 14 3 4 #"list"
0 0 22 3 1 #" "
0 0 14 3 1 #"a"
0 0 22 3 1 #" "
0 0 14 3 3 #"..."
0 0 22 3 3 #") ("
0 0 14 3 5 #"PySeq"
0 0 22 3 2 #" ("
0 0 14 3 3 #"map"
0 0 22 3 1 #" "
0 0 14 3 21 #"get-structured-python"
0 0 22 3 1 #" "
0 0 14 3 1 #"a"
0 0 22 3 3 #"))]"
0 0 22 29 1 #"\n"
0 0 22 3 4 #"    "
0 0 22 29 1 #"\n"
0 0 22 3 4 #"    "
0 0 17 3 7 #"; loops"
0 0 22 29 1 #"\n"
0 0 22 3 6 #"    [("
0 0 14 3 10 #"hash-table"
0 0 22 3 2 #" ("
0 0 20 3 1 #"'"
0 0 14 3 8 #"nodetype"
0 0 22 3 1 #" "
0 0 19 3 5 #"\"For\""
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 18 #"                 ("
0 0 20 3 1 #"'"
0 0 14 3 6 #"target"
0 0 22 3 1 #" "
0 0 14 3 6 #"target"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 18 #"                 ("
0 0 20 3 1 #"'"
0 0 14 3 4 #"iter"
0 0 22 3 1 #" "
0 0 14 3 4 #"iter"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 18 #"                 ("
0 0 20 3 1 #"'"
0 0 14 3 4 #"body"
0 0 22 3 1 #" "
0 0 14 3 4 #"body"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 18 #"                 ("
0 0 20 3 1 #"'"
0 0 14 3 6 #"orelse"
0 0 22 3 1 #" "
0 0 14 3 6 #"orelse"
0 0 22 3 2 #"))"
0 0 22 29 1 #"\n"
0 0 22 3 6 #"     ("
0 0 14 3 9 #"PyForElse"
0 0 22 3 1 #" "
0 0 14 3 4 #"iter"
0 0 22 29 1 #"\n"
0 0 22 3 17 #"                ("
0 0 14 3 21 #"get-structured-python"
0 0 22 3 1 #" "
0 0 14 3 6 #"target"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 17 #"                ("
0 0 14 3 21 #"get-structured-python"
0 0 22 3 1 #" "
0 0 14 3 4 #"body"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 17 #"                ("
0 0 14 3 21 #"get-structured-python"
0 0 22 3 1 #" "
0 0 14 3 6 #"orelse"
0 0 22 3 3 #"))]"
0 0 22 29 1 #"\n"
0 0 22 3 6 #"    [("
0 0 14 3 10 #"hash-table"
0 0 22 3 2 #" ("
0 0 20 3 1 #"'"
0 0 14 3 8 #"nodetype"
0 0 22 3 1 #" "
0 0 19 3 7 #"\"While\""
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 18 #"                 ("
0 0 20 3 1 #"'"
0 0 14 3 4 #"test"
0 0 22 3 1 #" "
0 0 14 3 4 #"test"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 18 #"                 ("
0 0 20 3 1 #"'"
0 0 14 3 4 #"body"
0 0 22 3 1 #" "
0 0 14 3 4 #"body"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 18 #"                 ("
0 0 20 3 1 #"'"
0 0 14 3 6 #"orelse"
0 0 22 3 1 #" "
0 0 14 3 6 #"orelse"
0 0 22 3 2 #"))"
0 0 22 29 1 #"\n"
0 0 22 3 6 #"     ("
0 0 14 3 7 #"PyWhile"
0 0 22 3 2 #" ("
0 0 14 3 21 #"get-structured-python"
0 0 22 3 1 #" "
0 0 14 3 4 #"test"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 15 #"              ("
0 0 14 3 21 #"get-structured-python"
0 0 22 3 1 #" "
0 0 14 3 4 #"body"
0 0 22 3 3 #"))]"
0 0 22 29 1 #"\n"
0 0 22 3 6 #"      "
0 0 22 29 1 #"\n"
0 0 22 3 4 #"    "
0 0 17 3 9 #"; control"
0 0 22 29 1 #"\n"
0 0 22 3 6 #"    [("
0 0 14 3 10 #"hash-table"
0 0 22 3 2 #" ("
0 0 20 3 1 #"'"
0 0 14 3 8 #"nodetype"
0 0 22 3 1 #" "
0 0 19 3 4 #"\"If\""
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 18 #"                 ("
0 0 20 3 1 #"'"
0 0 14 3 4 #"test"
0 0 22 3 1 #" "
0 0 14 3 4 #"test"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 18 #"                 ("
0 0 20 3 1 #"'"
0 0 14 3 4 #"body"
0 0 22 3 1 #" "
0 0 14 3 4 #"body"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 18 #"                 ("
0 0 20 3 1 #"'"
0 0 14 3 6 #"orelse"
0 0 22 3 1 #" "
0 0 14 3 6 #"orelse"
0 0 22 3 2 #"))"
0 0 22 29 1 #"\n"
0 0 22 3 6 #"     ("
0 0 14 3 4 #"PyIf"
0 0 22 3 2 #" ("
0 0 14 3 21 #"get-structured-python"
0 0 22 3 1 #" "
0 0 14 3 4 #"test"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 12 #"           ("
0 0 14 3 21 #"get-structured-python"
0 0 22 3 1 #" "
0 0 14 3 4 #"body"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 12 #"           ("
0 0 14 3 21 #"get-structured-python"
0 0 22 3 1 #" "
0 0 14 3 6 #"orelse"
0 0 22 3 3 #"))]"
0 0 22 29 1 #"\n"
0 0 22 3 4 #"    "
0 0 22 29 1 #"\n"
0 0 22 3 4 #"    "
0 0 17 3 15 #"; error control"
0 0 22 29 1 #"\n"
0 0 22 3 6 #"    [("
0 0 14 3 10 #"hash-table"
0 0 22 3 2 #" ("
0 0 20 3 1 #"'"
0 0 14 3 8 #"nodetype"
0 0 22 3 1 #" "
0 0 19 3 11 #"\"TryExcept\""
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 18 #"                 ("
0 0 20 3 1 #"'"
0 0 14 3 4 #"body"
0 0 22 3 1 #" "
0 0 14 3 4 #"body"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 18 #"                 ("
0 0 20 3 1 #"'"
0 0 14 3 6 #"orelse"
0 0 22 3 1 #" "
0 0 14 3 6 #"orelse"
0 0 22 3 3 #")  "
0 0 17 3 25 #"; use this!!#############"
0 0 22 29 1 #"\n"
0 0 22 3 18 #"                 ("
0 0 20 3 1 #"'"
0 0 14 3 8 #"handlers"
0 0 22 3 1 #" "
0 0 14 3 8 #"handlers"
0 0 22 3 2 #"))"
0 0 22 29 1 #"\n"
0 0 22 3 6 #"     ("
0 0 14 3 11 #"PyTryExcept"
0 0 22 3 2 #" ("
0 0 14 3 21 #"get-structured-python"
0 0 22 3 1 #" "
0 0 14 3 4 #"body"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 19 #"                  ("
0 0 14 3 3 #"map"
0 0 22 3 1 #" "
0 0 14 3 21 #"get-structured-python"
0 0 22 3 1 #" "
0 0 14 3 8 #"handlers"
0 0 22 3 3 #"))]"
0 0 22 29 1 #"\n"
0 0 22 3 6 #"    [("
0 0 14 3 10 #"hash-table"
0 0 22 3 2 #" ("
0 0 20 3 1 #"'"
0 0 14 3 8 #"nodetype"
0 0 22 3 1 #" "
0 0 19 3 7 #"\"Raise\""
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 18 #"                 ("
0 0 20 3 1 #"'"
0 0 14 3 3 #"exc"
0 0 22 3 1 #" "
0 0 14 3 3 #"exc"
0 0 22 3 4 #")   "
0 0 17 3 28 #"; what is this? ############"
0 0 22 29 1 #"\n"
0 0 22 3 18 #"                 ("
0 0 20 3 1 #"'"
0 0 14 3 5 #"cause"
0 0 22 3 1 #" "
0 0 14 3 5 #"cause"
0 0 22 3 2 #"))"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"     "
0 0 17 3 68
#";(PyRaise (get-structured-python exc) (get-structured-python cause))"
0 0 22 29 1 #"\n"
0 0 22 3 6 #"     ("
0 0 14 3 7 #"PyRaise"
0 0 22 3 2 #" ("
0 0 14 3 21 #"get-structured-python"
0 0 22 3 1 #" "
0 0 14 3 3 #"exc"
0 0 22 3 3 #") ("
0 0 14 3 6 #"PyPass"
0 0 22 3 3 #"))]"
0 0 22 29 1 #"\n"
0 0 22 3 6 #"    [("
0 0 14 3 10 #"hash-table"
0 0 22 3 2 #" ("
0 0 20 3 1 #"'"
0 0 14 3 8 #"nodetype"
0 0 22 3 1 #" "
0 0 19 3 15 #"\"ExceptHandler\""
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 18 #"                 ("
0 0 20 3 1 #"'"
0 0 14 3 4 #"type"
0 0 22 3 1 #" "
0 0 14 3 4 #"type"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 18 #"                 ("
0 0 20 3 1 #"'"
0 0 14 3 4 #"name"
0 0 22 3 1 #" "
0 0 14 3 4 #"name"
0 0 22 3 5 #")    "
0 0 17 3 24 #"; use this #############"
0 0 22 29 1 #"\n"
0 0 22 3 18 #"                 ("
0 0 20 3 1 #"'"
0 0 14 3 4 #"body"
0 0 22 3 1 #" "
0 0 14 3 4 #"body"
0 0 22 3 2 #"))"
0 0 22 29 1 #"\n"
0 0 22 3 6 #"     ("
0 0 15 3 5 #"local"
0 0 22 3 3 #" (["
0 0 15 3 6 #"define"
0 0 22 3 1 #" "
0 0 14 3 6 #"pytype"
0 0 22 3 2 #" ("
0 0 14 3 21 #"get-structured-python"
0 0 22 3 1 #" "
0 0 14 3 4 #"type"
0 0 22 3 2 #")]"
0 0 22 29 1 #"\n"
0 0 22 3 14 #"             ["
0 0 15 3 6 #"define"
0 0 22 3 1 #" "
0 0 14 3 6 #"pybody"
0 0 22 3 2 #" ("
0 0 14 3 21 #"get-structured-python"
0 0 22 3 1 #" "
0 0 14 3 4 #"body"
0 0 22 3 3 #")])"
0 0 22 29 1 #"\n"
0 0 22 3 8 #"       ("
0 0 14 3 2 #"if"
0 0 22 3 2 #" ("
0 0 14 3 5 #"null?"
0 0 22 3 1 #" "
0 0 14 3 4 #"name"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 12 #"           ("
0 0 14 3 8 #"PyExcept"
0 0 22 3 1 #" "
0 0 14 3 6 #"pytype"
0 0 22 3 1 #" "
0 0 14 3 6 #"pybody"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 12 #"           ("
0 0 14 3 8 #"PyExcept"
0 0 22 3 1 #" "
0 0 14 3 6 #"pytype"
0 0 22 3 1 #" "
0 0 14 3 6 #"pybody"
0 0 22 3 4 #")))]"
0 0 22 29 1 #"\n"
0 0 22 3 11 #"           "
0 0 17 3 2 #";("
0 0 17 3 13 #"PyNamedExcept"
0 0 17 3 1 #" "
0 0 17 3 6 #"pytype"
0 0 17 3 1 #" "
0 0 17 3 16 #"name pybody))))]"
0 0 22 29 1 #"\n"
0 0 22 3 4 #"    "
0 0 22 29 1 #"\n"
0 0 22 3 6 #"    [("
0 0 14 3 10 #"hash-table"
0 0 22 3 2 #" ("
0 0 20 3 1 #"'"
0 0 14 3 8 #"nodetype"
0 0 22 3 1 #" "
0 0 19 3 6 #"\"Pass\""
0 0 22 3 2 #"))"
0 0 22 29 1 #"\n"
0 0 22 3 6 #"     ("
0 0 14 3 6 #"PyPass"
0 0 22 3 2 #")]"
0 0 22 29 1 #"\n"
0 0 22 3 4 #"    "
0 0 22 29 1 #"\n"
0 0 22 3 6 #"    [("
0 0 14 3 10 #"hash-table"
0 0 22 3 2 #" ("
0 0 20 3 1 #"'"
0 0 14 3 8 #"nodetype"
0 0 22 3 1 #" "
0 0 19 3 6 #"\"Name\""
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 18 #"                 ("
0 0 20 3 1 #"'"
0 0 14 3 3 #"ctx"
0 0 22 3 1 #" "
0 0 14 3 1 #"_"
0 0 22 3 9 #")        "
0 0 17 3 23 #";; ignoring ctx for now"
0 0 22 29 1 #"\n"
0 0 22 3 18 #"                 ("
0 0 20 3 1 #"'"
0 0 14 3 2 #"id"
0 0 22 3 1 #" "
0 0 14 3 2 #"id"
0 0 22 3 2 #"))"
0 0 22 29 1 #"\n"
0 0 22 3 6 #"     ("
0 0 14 3 4 #"PyId"
0 0 22 3 2 #" ("
0 0 14 3 14 #"string->symbol"
0 0 22 3 1 #" "
0 0 14 3 2 #"id"
0 0 22 3 3 #"))]"
0 0 22 29 1 #"\n"
0 0 22 3 4 #"    "
0 0 22 29 1 #"\n"
0 0 22 3 4 #"    "
0 0 17 3 11 #"; operators"
0 0 22 29 1 #"\n"
0 0 22 3 6 #"    [("
0 0 14 3 10 #"hash-table"
0 0 22 3 2 #" ("
0 0 20 3 1 #"'"
0 0 14 3 8 #"nodetype"
0 0 22 3 1 #" "
0 0 19 3 9 #"\"UnaryOp\""
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 18 #"                 ("
0 0 20 3 1 #"'"
0 0 14 3 2 #"op"
0 0 22 3 1 #" "
0 0 14 3 2 #"op"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 18 #"                 ("
0 0 20 3 1 #"'"
0 0 14 3 7 #"operand"
0 0 22 3 1 #" "
0 0 14 3 7 #"operand"
0 0 22 3 2 #"))"
0 0 22 29 1 #"\n"
0 0 22 3 6 #"     ("
0 0 15 3 5 #"local"
0 0 22 3 3 #" (["
0 0 15 3 6 #"define"
0 0 22 3 1 #" "
0 0 14 3 6 #"optype"
0 0 22 3 2 #" ("
0 0 14 3 14 #"string->symbol"
0 0 22 3 2 #" ("
0 0 14 3 8 #"hash-ref"
0 0 22 3 1 #" "
0 0 14 3 2 #"op"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 8 #"nodetype"
0 0 22 3 4 #"))])"
0 0 22 29 1 #"\n"
0 0 22 3 8 #"       ("
0 0 14 3 6 #"PyPrim"
0 0 22 3 1 #" "
0 0 14 3 6 #"optype"
0 0 22 3 2 #" ("
0 0 14 3 4 #"list"
0 0 22 3 2 #" ("
0 0 14 3 21 #"get-structured-python"
0 0 22 3 1 #" "
0 0 14 3 7 #"operand"
0 0 22 3 5 #"))))]"
0 0 22 29 1 #"\n"
0 0 22 3 6 #"    [("
0 0 14 3 10 #"hash-table"
0 0 22 3 2 #" ("
0 0 20 3 1 #"'"
0 0 14 3 8 #"nodetype"
0 0 22 3 1 #" "
0 0 19 3 7 #"\"BinOp\""
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 18 #"                 ("
0 0 20 3 1 #"'"
0 0 14 3 2 #"op"
0 0 22 3 1 #" "
0 0 14 3 2 #"op"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 18 #"                 ("
0 0 20 3 1 #"'"
0 0 14 3 4 #"left"
0 0 22 3 1 #" "
0 0 14 3 4 #"left"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 18 #"                 ("
0 0 20 3 1 #"'"
0 0 14 3 5 #"right"
0 0 22 3 1 #" "
0 0 14 3 5 #"right"
0 0 22 3 2 #"))"
0 0 22 29 1 #"\n"
0 0 22 3 6 #"     ("
0 0 15 3 5 #"local"
0 0 22 3 3 #" (["
0 0 15 3 6 #"define"
0 0 22 3 1 #" "
0 0 14 3 6 #"optype"
0 0 22 3 2 #" ("
0 0 14 3 14 #"string->symbol"
0 0 22 3 2 #" ("
0 0 14 3 8 #"hash-ref"
0 0 22 3 1 #" "
0 0 14 3 2 #"op"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 8 #"nodetype"
0 0 22 3 4 #"))])"
0 0 22 29 1 #"\n"
0 0 22 3 8 #"       ("
0 0 14 3 6 #"PyPrim"
0 0 22 3 1 #" "
0 0 14 3 6 #"optype"
0 0 22 3 2 #" ("
0 0 14 3 4 #"list"
0 0 22 3 2 #" ("
0 0 14 3 21 #"get-structured-python"
0 0 22 3 1 #" "
0 0 14 3 4 #"left"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 29 #"                            ("
0 0 14 3 21 #"get-structured-python"
0 0 22 3 1 #" "
0 0 14 3 5 #"right"
0 0 22 3 5 #"))))]"
0 0 22 29 1 #"\n"
0 0 22 3 6 #"    [("
0 0 14 3 10 #"hash-table"
0 0 22 3 2 #" ("
0 0 20 3 1 #"'"
0 0 14 3 8 #"nodetype"
0 0 22 3 1 #" "
0 0 19 3 8 #"\"BoolOp\""
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 18 #"                 ("
0 0 20 3 1 #"'"
0 0 14 3 2 #"op"
0 0 22 3 1 #" "
0 0 14 3 2 #"op"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 18 #"                 ("
0 0 20 3 1 #"'"
0 0 14 3 6 #"values"
0 0 22 3 1 #" "
0 0 14 3 6 #"values"
0 0 22 3 2 #"))"
0 0 22 29 1 #"\n"
0 0 22 3 6 #"     ("
0 0 15 3 5 #"local"
0 0 22 3 3 #" (["
0 0 15 3 6 #"define"
0 0 22 3 1 #" "
0 0 14 3 6 #"optype"
0 0 22 3 2 #" ("
0 0 14 3 14 #"string->symbol"
0 0 22 3 2 #" ("
0 0 14 3 8 #"hash-ref"
0 0 22 3 1 #" "
0 0 14 3 2 #"op"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 8 #"nodetype"
0 0 22 3 4 #"))])"
0 0 22 29 1 #"\n"
0 0 22 3 8 #"       ("
0 0 14 3 6 #"PyPrim"
0 0 22 3 1 #" "
0 0 14 3 6 #"optype"
0 0 22 3 2 #" ("
0 0 14 3 3 #"map"
0 0 22 3 1 #" "
0 0 14 3 21 #"get-structured-python"
0 0 22 3 1 #" "
0 0 14 3 6 #"values"
0 0 22 3 4 #")))]"
0 0 22 29 1 #"\n"
0 0 22 3 6 #"    [("
0 0 14 3 10 #"hash-table"
0 0 22 3 2 #" ("
0 0 20 3 1 #"'"
0 0 14 3 8 #"nodetype"
0 0 22 3 1 #" "
0 0 19 3 9 #"\"Compare\""
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 18 #"                 ("
0 0 20 3 1 #"'"
0 0 14 3 3 #"ops"
0 0 22 3 1 #" "
0 0 14 3 3 #"ops"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 18 #"                 ("
0 0 20 3 1 #"'"
0 0 14 3 11 #"comparators"
0 0 22 3 1 #" "
0 0 14 3 11 #"comparators"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 18 #"                 ("
0 0 20 3 1 #"'"
0 0 14 3 4 #"left"
0 0 22 3 1 #" "
0 0 14 3 4 #"left"
0 0 22 3 2 #"))"
0 0 22 29 1 #"\n"
0 0 22 3 6 #"     ("
0 0 14 3 9 #"PyCompare"
0 0 22 3 2 #" ("
0 0 14 3 3 #"map"
0 0 22 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 22 3 2 #" ("
0 0 14 3 1 #"a"
0 0 22 3 3 #") ("
0 0 14 3 14 #"string->symbol"
0 0 22 3 2 #" ("
0 0 14 3 8 #"hash-ref"
0 0 22 3 1 #" "
0 0 14 3 1 #"a"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 8 #"nodetype"
0 0 22 3 4 #"))) "
0 0 14 3 3 #"ops"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 17 #"                ("
0 0 14 3 21 #"get-structured-python"
0 0 22 3 1 #" "
0 0 14 3 4 #"left"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 17 #"                ("
0 0 14 3 3 #"map"
0 0 22 3 1 #" "
0 0 14 3 21 #"get-structured-python"
0 0 22 3 1 #" "
0 0 14 3 11 #"comparators"
0 0 22 3 3 #"))]"
0 0 22 29 1 #"\n"
0 0 22 3 4 #"    "
0 0 22 29 1 #"\n"
0 0 22 3 4 #"    "
0 0 17 3 12 #"; primitives"
0 0 22 29 1 #"\n"
0 0 22 3 6 #"    [("
0 0 14 3 10 #"hash-table"
0 0 22 3 2 #" ("
0 0 20 3 1 #"'"
0 0 14 3 8 #"nodetype"
0 0 22 3 1 #" "
0 0 19 3 5 #"\"Num\""
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 18 #"                 ("
0 0 20 3 1 #"'"
0 0 14 3 1 #"n"
0 0 22 3 1 #" "
0 0 14 3 1 #"n"
0 0 22 3 2 #"))"
0 0 22 29 1 #"\n"
0 0 22 3 6 #"     ("
0 0 14 3 5 #"PyInt"
0 0 22 3 1 #" "
0 0 14 3 1 #"n"
0 0 22 3 2 #")]"
0 0 22 29 1 #"\n"
0 0 22 3 6 #"    [("
0 0 14 3 10 #"hash-table"
0 0 22 3 2 #" ("
0 0 20 3 1 #"'"
0 0 14 3 8 #"nodetype"
0 0 22 3 1 #" "
0 0 19 3 5 #"\"Str\""
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 18 #"                 ("
0 0 20 3 1 #"'"
0 0 14 3 1 #"s"
0 0 22 3 1 #" "
0 0 14 3 1 #"s"
0 0 22 3 2 #"))"
0 0 22 29 1 #"\n"
0 0 22 3 6 #"     ("
0 0 14 3 5 #"PyStr"
0 0 22 3 1 #" "
0 0 14 3 1 #"s"
0 0 22 3 2 #")]"
0 0 22 29 1 #"\n"
0 0 22 3 4 #"    "
0 0 22 29 1 #"\n"
0 0 22 3 5 #"    ["
0 0 14 3 1 #"_"
0 0 22 3 2 #" ("
0 0 15 3 5 #"begin"
0 0 22 29 1 #"\n"
0 0 22 3 10 #"         ("
0 0 14 3 7 #"display"
0 0 22 3 1 #" "
0 0 14 3 6 #"pyjson"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 10 #"         ("
0 0 14 3 7 #"display"
0 0 22 3 1 #" "
0 0 19 3 4 #"\"\\n\""
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 10 #"         ("
0 0 14 3 5 #"error"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 5 #"parse"
0 0 22 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 5 #"Haven"
0 0 19 3 1 #"'"
0 0 19 3 1 #"t"
0 0 19 3 1 #" "
0 0 19 3 7 #"handled"
0 0 19 3 1 #" "
0 0 19 3 1 #"a"
0 0 19 3 1 #" "
0 0 19 3 9 #"case yet\""
0 0 22 3 5 #"))]))"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 7        1549 4           0 0           0 257 0 22 29 1 #"\n"
0 0 22 3 9 #"#hasheq(("
0 0 14 3 4 #"body"
0 0 22 3 1 #" "
0 0 26 3 1 #"."
0 0 22 3 11 #" (#hasheq(("
0 0 14 3 5 #"value"
0 0 22 3 1 #" "
0 0 26 3 1 #"."
0 0 22 3 10 #" #hasheq(("
0 0 14 3 2 #"op"
0 0 22 3 1 #" "
0 0 26 3 1 #"."
0 0 22 3 10 #" #hasheq(("
0 0 14 3 8 #"nodetype"
0 0 22 3 1 #" "
0 0 26 3 1 #"."
0 0 22 3 1 #" "
0 0 14 3 3 #"Div"
0 0 22 3 3 #")))"
0 0 22 29 1 #"\n"
0 0 22 3 43 #"                                          ("
0 0 14 3 8 #"nodetype"
0 0 22 3 1 #" "
0 0 26 3 1 #"."
0 0 22 3 1 #" "
0 0 14 3 5 #"BinOp"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 43 #"                                          ("
0 0 14 3 4 #"left"
0 0 22 3 1 #" "
0 0 26 3 1 #"."
0 0 22 3 10 #" #hasheq(("
0 0 14 3 1 #"n"
0 0 22 3 1 #" "
0 0 26 3 1 #"."
0 0 22 3 1 #" "
0 0 20 3 3 #"5.0"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 59
#"                                                          ("
0 0 14 3 8 #"nodetype"
0 0 22 3 1 #" "
0 0 26 3 1 #"."
0 0 22 3 1 #" "
0 0 14 3 3 #"Num"
0 0 22 3 3 #")))"
0 0 22 29 1 #"\n"
0 0 22 3 43 #"                                          ("
0 0 14 3 5 #"right"
0 0 22 3 1 #" "
0 0 26 3 1 #"."
0 0 22 3 10 #" #hasheq(("
0 0 14 3 1 #"n"
0 0 22 3 1 #" "
0 0 26 3 1 #"."
0 0 22 3 1 #" "
0 0 20 3 3 #"0.0"
0 0 22 3 3 #") ("
0 0 14 3 8 #"nodetype"
0 0 22 3 1 #" "
0 0 26 3 1 #"."
0 0 22 3 1 #" "
0 0 14 3 3 #"Num"
0 0 22 3 5 #")))))"
0 0 22 29 1 #"\n"
0 0 22 3 26 #"                         ("
0 0 14 3 8 #"nodetype"
0 0 22 3 1 #" "
0 0 26 3 1 #"."
0 0 22 3 1 #" "
0 0 14 3 4 #"Expr"
0 0 22 3 4 #"))))"
0 0 22 29 1 #"\n"
0 0 22 3 9 #"        ("
0 0 14 3 8 #"nodetype"
0 0 22 3 1 #" "
0 0 26 3 1 #"."
0 0 22 3 1 #" "
0 0 14 3 9 #"TryExcept"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 9 #"        ("
0 0 14 3 6 #"orelse"
0 0 22 3 1 #" "
0 0 26 3 1 #"."
0 0 22 3 11 #" (#hasheq(("
0 0 14 3 3 #"exc"
0 0 22 3 1 #" "
0 0 26 3 1 #"."
0 0 22 3 10 #" #hasheq(("
0 0 14 3 4 #"args"
0 0 22 3 1 #" "
0 0 26 3 1 #"."
0 0 22 3 11 #" (#hasheq(("
0 0 14 3 1 #"s"
0 0 22 3 1 #" "
0 0 26 3 1 #"."
0 0 22 3 1 #" "
0 0 20 3 3 #"5.0"
0 0 22 3 1 #" "
0 0 14 3 1 #"/"
0 0 22 3 1 #" "
0 0 20 3 3 #"0.0"
0 0 22 3 1 #" "
0 0 14 3 4 #"didn"
0 0 20 3 1 #"'"
0 0 14 3 1 #"t"
0 0 22 3 1 #" "
0 0 14 3 5 #"raise"
0 0 22 3 1 #" "
0 0 14 3 17 #"ZeroDivisionError"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 60
#"                                                           ("
0 0 14 3 8 #"nodetype"
0 0 22 3 1 #" "
0 0 26 3 1 #"."
0 0 22 3 1 #" "
0 0 14 3 3 #"Str"
0 0 22 3 4 #"))))"
0 0 22 29 1 #"\n"
0 0 22 3 43 #"                                          ("
0 0 14 3 4 #"func"
0 0 22 3 1 #" "
0 0 26 3 1 #"."
0 0 22 3 10 #" #hasheq(("
0 0 14 3 2 #"id"
0 0 22 3 1 #" "
0 0 26 3 1 #"."
0 0 22 3 1 #" "
0 0 14 3 9 #"Exception"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 59
#"                                                          ("
0 0 14 3 3 #"ctx"
0 0 22 3 1 #" "
0 0 26 3 1 #"."
0 0 22 3 10 #" #hasheq(("
0 0 14 3 8 #"nodetype"
0 0 22 3 1 #" "
0 0 26 3 1 #"."
0 0 22 3 1 #" "
0 0 14 3 4 #"Load"
0 0 22 3 3 #")))"
0 0 22 29 1 #"\n"
0 0 22 3 59
#"                                                          ("
0 0 14 3 8 #"nodetype"
0 0 22 3 1 #" "
0 0 26 3 1 #"."
0 0 22 3 1 #" "
0 0 14 3 4 #"Name"
0 0 22 3 3 #")))"
0 0 22 29 1 #"\n"
0 0 22 3 43 #"                                          ("
0 0 14 3 8 #"nodetype"
0 0 22 3 1 #" "
0 0 26 3 1 #"."
0 0 22 3 1 #" "
0 0 14 3 4 #"Call"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 43 #"                                          ("
0 0 14 3 8 #"keywords"
0 0 22 3 1 #" "
0 0 26 3 1 #"."
0 0 22 3 4 #" ())"
0 0 22 29 1 #"\n"
0 0 22 3 43 #"                                          ("
0 0 14 3 6 #"kwargs"
0 0 22 3 1 #" "
0 0 26 3 1 #"."
0 0 22 3 2 #" )"
0 0 22 29 1 #"\n"
0 0 22 3 43 #"                                          ("
0 0 14 3 8 #"starargs"
0 0 22 3 1 #" "
0 0 26 3 1 #"."
0 0 22 3 4 #" )))"
0 0 22 29 1 #"\n"
0 0 22 3 28 #"                           ("
0 0 14 3 5 #"cause"
0 0 22 3 1 #" "
0 0 26 3 1 #"."
0 0 22 3 2 #" )"
0 0 22 29 1 #"\n"
0 0 22 3 28 #"                           ("
0 0 14 3 8 #"nodetype"
0 0 22 3 1 #" "
0 0 26 3 1 #"."
0 0 22 3 1 #" "
0 0 14 3 5 #"Raise"
0 0 22 3 4 #"))))"
0 0 22 29 1 #"\n"
0 0 22 3 9 #"        ("
0 0 14 3 8 #"handlers"
0 0 22 3 1 #" "
0 0 26 3 1 #"."
0 0 22 3 11 #" (#hasheq(("
0 0 14 3 4 #"name"
0 0 22 3 1 #" "
0 0 26 3 1 #"."
0 0 22 3 2 #" )"
0 0 22 29 1 #"\n"
0 0 22 3 30 #"                             ("
0 0 14 3 4 #"type"
0 0 22 3 1 #" "
0 0 26 3 1 #"."
0 0 22 3 10 #" #hasheq(("
0 0 14 3 2 #"id"
0 0 22 3 1 #" "
0 0 26 3 1 #"."
0 0 22 3 1 #" "
0 0 14 3 17 #"ZeroDivisionError"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 46 #"                                             ("
0 0 14 3 3 #"ctx"
0 0 22 3 1 #" "
0 0 26 3 1 #"."
0 0 22 3 10 #" #hasheq(("
0 0 14 3 8 #"nodetype"
0 0 22 3 1 #" "
0 0 26 3 1 #"."
0 0 22 3 1 #" "
0 0 14 3 4 #"Load"
0 0 22 3 3 #")))"
0 0 22 29 1 #"\n"
0 0 22 3 46 #"                                             ("
0 0 14 3 8 #"nodetype"
0 0 22 3 1 #" "
0 0 26 3 1 #"."
0 0 22 3 1 #" "
0 0 14 3 4 #"Name"
0 0 22 3 3 #")))"
0 0 22 29 1 #"\n"
0 0 22 3 30 #"                             ("
0 0 14 3 4 #"body"
0 0 22 3 1 #" "
0 0 26 3 1 #"."
0 0 22 3 11 #" (#hasheq(("
0 0 14 3 8 #"nodetype"
0 0 22 3 1 #" "
0 0 26 3 1 #"."
0 0 22 3 1 #" "
0 0 14 3 4 #"Pass"
0 0 22 3 4 #"))))"
0 0 22 29 1 #"\n"
0 0 22 3 30 #"                             ("
0 0 14 3 8 #"nodetype"
0 0 22 3 1 #" "
0 0 26 3 1 #"."
0 0 22 3 1 #" "
0 0 14 3 13 #"ExceptHandler"
0 0 22 3 5 #")))))"
0 0 22 29 1 #"\n"
0           0 0           0
